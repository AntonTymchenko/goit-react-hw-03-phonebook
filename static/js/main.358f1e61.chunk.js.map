{"version":3,"sources":["components/ContactsListItem/ContactsLitItem.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Panel/Panel.module.css","components/ContactsList/ContactList.module.css","components/Panel/Panel.js","components/ContactForm/ContactForm.js","components/Container/Container.js","components/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Panel","title","children","className","s","defaultProps","ContactForm","state","name","number","inputGetValue","e","item","currentTarget","setState","value","formHandleSubmit","preventDefault","props","onSubmit","this","form","label","inputName","onChange","type","pattern","required","placeholder","inputFrom","AddBtn","React","Component","Container","ContactsListItem","id","deleteContact","itemOflistOfContacts","info","icon","onClick","button","ContactsList","contacts","class","listContacts","map","Filter","onFilterChange","contactTitle","filterLabel","inputFilter","App","filter","addNewContact","contact","uuidv4","some","alert","contId","prevState","getResultOfContacts","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.358f1e61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemOflistOfContacts\":\"ContactsLitItem_itemOflistOfContacts__1XDpN\",\"icon\":\"ContactsLitItem_icon__3d0x6\",\"info\":\"ContactsLitItem_info__aRMTM\",\"button\":\"ContactsLitItem_button__31IBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3SNn2\",\"container\":\"ContactForm_container__2-rtT\",\"AddBtn\":\"ContactForm_AddBtn__2CsoQ\",\"inputFrom\":\"ContactForm_inputFrom__1fMB1\",\"inputName\":\"ContactForm_inputName__1cVxd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filter_inputFilter__2lcC3\",\"contactTitle\":\"Filter_contactTitle__GGS8H\",\"filterLabel\":\"Filter_filterLabel__2pEzu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Panel_title__1vLPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContacts\":\"ContactList_listContacts__3MtN2\"};","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport s from \"./Panel.module.css\";\r\n\r\nconst Panel = ({ title, children }) => (\r\n  <>\r\n    <h1 className={s.title}>{title}</h1>\r\n    {children}\r\n  </>\r\n);\r\n\r\nPanel.defaultProps = {\r\n  title: \"\",\r\n  children: [],\r\n};\r\nPanel.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\nexport default Panel;\r\n","import React from \"react\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  inputGetValue = (e) => {\r\n    const item = e.currentTarget.name;\r\n\r\n    this.setState({ [item]: e.currentTarget.value });\r\n  };\r\n\r\n  formHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.formHandleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.inputName}\r\n            onChange={this.inputGetValue}\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            placeholder=\"Ivan Ivanov\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            className={s.inputFrom}\r\n            onChange={this.inputGetValue}\r\n            type=\"tel\"\r\n            value={this.state.number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            placeholder=\"098-111-22-33\"\r\n          />\r\n          <button type=\"submit\" className={s.AddBtn}>\r\n            Add contact\r\n          </button>\r\n        </label>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport \"./Container.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className=\"containers\"> {children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport s from \"./ContactsLitItem.module.css\";\r\nimport {\r\n  HiOutlinePhone,\r\n  HiOutlineUser,\r\n  HiOutlineArchive,\r\n} from \"react-icons/hi\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactsListItem({ id, name, number, deleteContact }) {\r\n  return (\r\n    <li key={id} className={s.itemOflistOfContacts}>\r\n      <p className={s.info}>\r\n        <span className={s.icon}>\r\n          <HiOutlineUser />\r\n        </span>\r\n        {name}\r\n      </p>\r\n      <p className={s.info}>\r\n        <span className={s.icon}>\r\n          <HiOutlinePhone />\r\n        </span>\r\n        {number}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => deleteContact(id)}\r\n        className={s.button}\r\n      >\r\n        <span className={s.icon}>\r\n          <HiOutlineArchive />\r\n        </span>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactsListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { ContactsListItem };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nimport { ContactsListItem } from \"../ContactsListItem/ContactsListItem\";\r\n\r\nfunction ContactsList({ contacts, deleteContact }) {\r\n  return (\r\n    <ul class={s.listContacts}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactsListItem\r\n          key={id}\r\n          name={name}\r\n          id={id}\r\n          number={number}\r\n          deleteContact={deleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ onFilterChange }) => {\r\n  return (\r\n    <>\r\n      <h2 className={s.contactTitle}>Contacts</h2>\r\n      <label className={s.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          onChange={onFilterChange}\r\n          className={s.inputFilter}\r\n          placeholder=\"Who are you looking for ?\"\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  onFilterChange: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\nimport Panel from \"./components/Panel/Panel\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Container from \"./components/Container/Container\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n  }\n\n  addNewContact = (name, number) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (contacts.some((item) => item.name === contact.name)) {\n      alert(`${contact.name} is already in contacts!`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = (contId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== contId),\n    }));\n  };\n  onFilterChange = (e) => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n  getResultOfContacts = () => {\n    const { contacts, filter } = this.state;\n    if (filter === \"\") {\n      return contacts;\n    } else {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <header>\n          <Container>\n            <Panel title=\"Phonebook\">\n              <ContactForm onSubmit={this.addNewContact} />\n            </Panel>\n          </Container>\n        </header>\n\n        <section>\n          <Container>\n            <Filter onFilterChange={this.onFilterChange} />\n\n            {this.state.contacts.length === 0 ? (\n              <p>There are not any contacts...</p>\n            ) : (\n              <ContactsList\n                contacts={this.getResultOfContacts()}\n                deleteContact={this.deleteContact}\n              />\n            )}\n          </Container>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { StrictMode } from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}